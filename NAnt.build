<?xml version="1.0" encoding="iso-8859-1"?>

<project name="NAnt" default="build" basedir=".">
    <tstamp/>
    <property name="debug" value="true"/>
    <property name="project.name" value="nant"/>

    <!-- Use script task to get this from AssemblyInfo.cs using a regular expression -->
    <property name="project.version" value="x.x.x"/>

    <script language="C#" mainclass="VersionReader">
        <code><![CDATA[

        using System.IO;

        class VersionReader {

            public static void ScriptMain(Project project) {
                PropertyDictionary properties = project.Properties;

                string asmInfo = properties["nant.base.dir"] + "\\src\\NAnt\\AssemblyInfo.cs";

                FileStream asmInfoStream = null;
                asmInfoStream = new FileStream(asmInfo, FileMode.Open);

                StreamReader reader = new StreamReader(asmInfoStream);


                Regex commentRE = new Regex("^(\\s)*//");
                Regex versionRE = new Regex("(?<=AssemblyVersion(\\s)*\\(\")\\d\\.\\d\\.\\d");

                string line = reader.ReadLine();
                while (line != null) {
                    if (!commentRE.Match(line).Success) {
                        Match versionMatch = versionRE.Match(line);
                        if (versionMatch.Success) {
                            properties["project.version"] = versionMatch.Value;
                            break;
                        }
                    }
                    line = reader.ReadLine();
                }
            }

        }

        ]]></code>
    </script>


    <property name="dist.dir" value="${project.name}"/>
    <property name="build.dir" value="build"/>
    <property name="dist.name" value="${project.name}-src-${project.version}.zip"/>
    <property name="backup.name" value="..\nant-backup-${nant.dstamp}-${nant.tstamp}.zip" />

    <echo message="Building ${project.name}-${project.version}"/>

    <target name="clean">
        <delete dir="${build.dir}" verbose="true" failonerror="false"/>
        <delete dir="${dist.dir}" verbose="true" failonerror="false"/>
        <delete verbose="true" >
            <fileset basedir="examples">
                <includes name="UserTask/UserTask.dll"/>
                <includes name="HelloWorld/*.exe"/>
            </fileset>
        </delete>
        <delete file="${dist.name}" verbose="true" failonerror="false"/>
        <delete file="doc\NAnt.chm" verbose="true" failonerror="false"/>
    </target>

    <target name="build">
        <mkdir dir="${build.dir}"/>
        <copy todir="${build.dir}">
            <fileset basedir="bin">
                <includes name="DocNet*.*"/>
                <includes name="NUnitCore.dll"/>
            </fileset>
        </copy>
        <csc target="exe" output="${build.dir}\NAnt.exe" debug="${debug}" doc="${build.dir}\NAnt.xml">
            <sources basedir="src\NAnt">
                <includes name="**/*.cs"/>
            </sources>
            <references>
                <includes name="build/DocNet.dll"/>
                <includes name="build/DocNet.Msdn.dll"/>
                <includes name="build/NUnitCore.dll"/>
            </references>
            <arg value="/nowarn:1591"/>
            <arg value="/reference:Microsoft.JScript.dll"/>
        </csc>
    </target>

    <target name="examples" depends="build">
        <exec program="${build.dir}\nant.exe" basedir="examples"/>
    </target>

    <target name="test">
        <echo message="This task currently does nothing."/>
    </target>

    <target name="doc" depends="build">
        <docnet outputDir="${build.dir}\docs" helpName="NAnt" showMissing="true" showPrivate="false">
            <assemblies basedir="${build.dir}">
                <includes name="NAnt.exe"/>
            </assemblies>
        </docnet>
        <copy file="${build.dir}/docs/NAnt.chm" todir="${build.dir}"/>
    </target>

<!--
    <target name="test" depends="build">
        <exec program="build\nant.exe" commandline="-buildfile:test.build dist"/>
    </target>
-->

    <target name="backup" depends="clean">
        <exec program="bin/zip.exe" commandline="-r -q ${backup.name} *"/>
    </target>

    <target name="dist" depends="clean">
        <!-- build a clean release distribution for release -->
        <property name="debug" value="false"/>
        <echo message="Debug = ${debug}"/>
        <call target="build"/>
        <copy file="${build.dir}\NAnt.exe" todir="${dist.dir}\bin"/>
        <copy file="${build.dir}\NAnt.xml" todir="${dist.dir}\bin"/>

        <!-- build developer documentation -->
        <call target="doc"/>
        <copy file="${build.dir}\NAnt.chm" todir="${dist.dir}\doc"/>

        <copy todir="${dist.dir}">
            <fileset>
                <includes name="bin/**"/>
                <includes name="doc/**"/>
                <includes name="src/**"/>
                <includes name="examples/**"/>
                <includes name="NAnt.build"/>
                <includes name="NAnt.key"/>
                <includes name="README.txt"/>
                <includes name="COPYING.txt"/>
            </fileset>
        </copy>

        <delete file="${dist.name}" failonerror="false"/>
        <exec program="bin/zip.exe" commandline="-r -q ${dist.name} ${dist.dir}/*"/>
    </target>
</project>
