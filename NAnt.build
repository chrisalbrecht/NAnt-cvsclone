<?xml version="1.0"?>

<project name="NAnt" default="test" basedir=".">
    <tstamp/>
    <property name="debug" value="true"/>
    <property name="project.name" value="nant"/>
    <property name="project.FormalName" value="NAnt"/>

    <property name="src.dir" value="src"/>
    <property name="build.dir" value="build"/>
    <property name="dist.dir" value="${project.name}"/>

    <!-- Use script task to get this from AssemblyInfo.cs using a regular expression -->
    <property name="project.version" value="x.x"/>
    <script language="C#">
        <code><![CDATA[
		public static void ScriptMain(Project project) {
			string sourcePath = Path.Combine(project.BaseDirectory, Path.Combine(project.Properties["src.dir"], project.Properties["project.FormalName"]));
			string assemblyInfoFileName = Path.Combine(sourcePath, "AssemblyInfo.cs");
			StreamReader reader = File.OpenText(assemblyInfoFileName);

			try {
				// Regular expression built with Regex: http://www.organicbit.com/regex/
				Regex expression = new Regex(@"^\[assembly: AssemblyVersion\(\""([0-9]+)\.([0-9]+)");
				string line = reader.ReadLine();
				while (line != null) {
					Match match = expression.Match(line);
					if (match.Success) {
						project.Properties["project.version"] = match.Result("$1.$2");
						break;
					}
					line = reader.ReadLine();
				}
			} finally {
				// must remember to close the file or the compile may not work
				reader.Close();
			}
		}
	]]></code>
    </script>

    <property name="dist.name" value="${project.name}-src-${project.version}.zip"/>
    <property name="backup.name" value="..\${project.name}-backup-${nant.dstamp}-${nant.tstamp}.zip" />

    <echo message="Building ${project.name}-${project.version}"/>

	<target name="debug" depends="clean">
		<property name="debug" value="true"/>
		<echo message="debug='${debug}'"/>
	</target>

	<target name="release" depends="clean">
		<property name="debug" value="false"/>
		<echo message="debug='${debug}'"/>
	</target>

    <target name="clean" description="cleans up everything">
        <delete dir="${build.dir}" verbose="true" failonerror="false"/>
        <delete dir="${dist.dir}" verbose="true" failonerror="false"/>
        <delete verbose="true" >
            <fileset basedir="examples">
                <includes name="UserTask/UserTask.dll"/>
                <includes name="HelloWorld/*.exe"/>
            </fileset>
        </delete>
        <delete file="${dist.name}" verbose="true" failonerror="false"/>
        <delete file="doc\NAnt.chm" verbose="true" failonerror="false"/>
    </target>

    <target name="build" description="compiles the source code">
        <mkdir dir="${build.dir}"/>
		<!-- copy the assemblies required to build NAnt to the build folder -->
        <copy todir="${build.dir}">
            <fileset basedir="bin">
                <includes name="NDoc.Core.dll"/>
                <includes name="NDoc.Documenter.Msdn.dll"/>
				<includes name="NUnit.Core.dll"/>
				<includes name="NZipLib.dll"/>
            </fileset>
        </copy>

		<!-- compile NAnt.Core.dll -->
        <csc target="library" output="${build.dir}\${project.FormalName}.Core.dll" debug="${debug}" doc="${build.dir}\${project.FormalName}.Core.xml">
            <sources basedir="${src.dir}\${project.FormalName}">
                <includes name="**/*.cs"/>
                <excludes name="NAnt.cs"/>
            </sources>
            <references>
                <includes name="${build.dir}/NDoc.Core.dll"/>
                <includes name="${build.dir}/NDoc.Documenter.Msdn.dll"/>
                <includes name="${build.dir}/NUnit.Core.dll"/>
                <includes name="${build.dir}/NZipLib.dll"/>
            </references>
            <arg value="/nowarn:1591"/>
            <arg value="/reference:Microsoft.JScript.dll"/>
        </csc>

		<!-- compile NAnt.exe -->
        <csc target="exe" output="${build.dir}\${project.FormalName}.exe" debug="${debug}" doc="${build.dir}\${project.FormalName}.xml">
            <sources basedir="${src.dir}\${project.FormalName}">
                <includes name="AssemblyInfo.cs"/>
                <includes name="NAnt.cs"/>
            </sources>
            <references>
                <includes name="${build.dir}/${project.FormalName}.Core.dll"/>
            </references>
            <arg value="/nowarn:1591"/>
        </csc>

		<!-- compile NAnt.Tests.dll -->
		<csc target="library" output="${build.dir}\${project.FormalName}.Tests.dll" debug="${debug}">
			<sources basedir="${src.dir}\${project.FormalName}.Tests">
				<includes name="**/*.cs"/>

				<!-- these tests should be run during intergration because they use third party network resources -->
                <excludes name="**/GetTaskTest.cs"/>
				<excludes name="**/MailTaskTest.cs"/>
			</sources>
			<references>
				<includes name="${build.dir}/NUnit.Core.dll"/>
				<includes name="${build.dir}/${project.FormalName}.Core.dll"/>
				<includes name="${build.dir}/${project.FormalName}.exe"/>
			</references>
		</csc>
    </target>

	<!--
		Perform unit tests.  If a unit test fails, the build fails.
		The base directory is set to the Test directory so that tests can easily
		load external data files wihtout having to worry about complicated paths.
	-->
    <target name="test" depends="build" description="run unit tests">
		<nunit basedir="${src.dir}\${project.FormalName}.Tests" verbose="false" haltOnError="true" haltOnFailure="true">
            <formatter type="xml"/>
            <formatter type="plain"/>
            <test class="SourceForge.NAnt.Tests.AllTests" assembly="${build.dir}\${project.FormalName}.Tests.dll" outfile="${build.dir}\TestResult" />
		</nunit>
    </target>

    <target name="examples" depends="build" description="build example programs">
        <exec program="${build.dir}\nant.exe" basedir="examples"/>
    </target>

    <target name="doc" depends="build" description="build documenation">
		<echo message="Requires HtmlHelp compiler (hhc.exe) to be installed and in the system path"/>
		<ndoc outputDir="${build.dir}\docs" helpName="NAnt" showMissing="true" showPrivate="false">
            <assemblies basedir="${build.dir}">
                <includes name="NAnt.exe"/>
                <includes name="NAnt.Core.dll"/>
            </assemblies>
        </ndoc>
		<copy file="${build.dir}/docs/NAnt.chm" todir="${build.dir}"/>
    </target>

    <target name="backup" depends="clean" description="make local backup">
		<echo message="Creating backup ${backup.name}"/>
		<zip zipfile="${backup.name}">
			<fileset basedir=".">
				<includes name="**"/>
			</fileset>
		</zip>
    </target>

    <target name="dist" depends="clean" description="create release distribution">
        <!-- build a clean release distribution for release -->
        <property name="debug" value="false"/>
        <echo message="Debug = ${debug}"/>
        <call target="build"/>
        <copy file="${build.dir}\NAnt.exe" todir="${dist.dir}\bin"/>
        <copy file="${build.dir}\NAnt.xml" todir="${dist.dir}\bin"/>

        <!-- build developer documentation -->
        <call target="doc"/>
        <copy file="${build.dir}\NAnt.chm" todir="${dist.dir}\doc"/>

        <copy todir="${dist.dir}">
            <fileset>
                <includes name="bin/**"/>
                <includes name="doc/**"/>
                <includes name="src/**"/>
                <includes name="examples/**"/>
                <includes name="NAnt.build"/>
                <includes name="NAnt.key"/>
                <includes name="README.txt"/>
                <includes name="COPYING.txt"/>
            </fileset>
        </copy>

        <delete file="${dist.name}" failonerror="false"/>
		<zip zipfile="${dist.name}">
			<fileset basedir="${dist.dir}">
				<includes name="**"/>
			</fileset>
		</zip>
    </target>
</project>
